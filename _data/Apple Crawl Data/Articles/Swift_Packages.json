{"articles":{"Adding Package Dependencies to Your App":{"title":"Adding Package Dependencies to Your App","type":"topic","identifier":"doc://com.apple.documentation/documentation/xcode/adding_package_dependencies_to_your_app","kind":"article","role":"article","url":"/documentation/xcode/adding_package_dependencies_to_your_app","abstract":[{"type":"text","text":"Integrate package dependencies to share code between projects, or leverage code from other developers."}]},"Identifying Binary Dependencies":{"title":"Identifying Binary Dependencies","type":"topic","identifier":"doc://com.apple.documentation/documentation/swift_packages/identifying_binary_dependencies","kind":"article","role":"article","url":"/documentation/swift_packages/identifying_binary_dependencies","abstract":[{"type":"text","text":"Find out if a package dependency references a binary and verify the binary’s authenticity."}]},"Editing a Package Dependency as a Local Package":{"title":"Editing a Package Dependency as a Local Package","type":"topic","identifier":"doc://com.apple.documentation/documentation/swift_packages/editing_a_package_dependency_as_a_local_package","kind":"article","role":"article","url":"/documentation/swift_packages/editing_a_package_dependency_as_a_local_package","abstract":[{"type":"text","text":"Override a package dependency and edit its content by adding it as a local package."}]},"Creating a Standalone Swift Package with Xcode":{"title":"Creating a Standalone Swift Package with Xcode","type":"topic","identifier":"doc://com.apple.documentation/documentation/xcode/creating_a_standalone_swift_package_with_xcode","kind":"article","role":"article","url":"/documentation/xcode/creating_a_standalone_swift_package_with_xcode","abstract":[{"type":"text","text":"Bundle executable or shareable code into a standalone Swift package."}]},"Bundling Resources with a Swift Package":{"title":"Bundling Resources with a Swift Package","type":"topic","identifier":"doc://com.apple.documentation/documentation/swift_packages/bundling_resources_with_a_swift_package","kind":"article","role":"article","url":"/documentation/swift_packages/bundling_resources_with_a_swift_package","abstract":[{"type":"text","text":"Add resource files to your Swift package and access them in your code."}]},"Localizing Package Resources":{"title":"Localizing Package Resources","type":"topic","identifier":"doc://com.apple.documentation/documentation/swift_packages/localizing_package_resources","kind":"article","role":"article","url":"/documentation/swift_packages/localizing_package_resources","abstract":[{"type":"text","text":"Ensure that your Swift package provides localized resources for many locales."}]},"Distributing Binary Frameworks as Swift Packages":{"title":"Distributing Binary Frameworks as Swift Packages","type":"topic","identifier":"doc://com.apple.documentation/documentation/swift_packages/distributing_binary_frameworks_as_swift_packages","kind":"article","role":"article","url":"/documentation/swift_packages/distributing_binary_frameworks_as_swift_packages","abstract":[{"type":"text","text":"Make binaries available to other developers by creating Swift packages that include one or more XCFrameworks."}]},"Developing a Swift Package in Tandem with an App":{"title":"Developing a Swift Package in Tandem with an App","type":"topic","identifier":"doc://com.apple.documentation/documentation/swift_packages/developing_a_swift_package_in_tandem_with_an_app","kind":"article","role":"article","url":"/documentation/swift_packages/developing_a_swift_package_in_tandem_with_an_app","abstract":[{"type":"text","text":"Add your published Swift package as a local package to your app’s project and develop the package and the app in tandem."}]},"Organizing Your Code with Local Packages":{"title":"Organizing Your Code with Local Packages","type":"topic","identifier":"doc://com.apple.documentation/documentation/swift_packages/organizing_your_code_with_local_packages","kind":"article","role":"article","url":"/documentation/swift_packages/organizing_your_code_with_local_packages","abstract":[{"type":"text","text":"Simplify maintenance, promote modularity, and encourage reuse by organizing your app’s code into local Swift packages."}]},"Publishing a Swift Package with Xcode":{"title":"Publishing a Swift Package with Xcode","type":"topic","identifier":"doc://com.apple.documentation/documentation/xcode/publishing_a_swift_package_with_xcode","kind":"article","role":"article","url":"/documentation/xcode/publishing_a_swift_package_with_xcode","abstract":[{"type":"text","text":"Publish your Swift package privately, or share it globally with other developers."}]},"Building Swift Packages or Apps that Use Them in Continuous Integration Workflows":{"title":"Building Swift Packages or Apps that Use Them in Continuous Integration Workflows","type":"topic","identifier":"doc://com.apple.documentation/documentation/swift_packages/building_swift_packages_or_apps_that_use_them_in_continuous_integration_workflows","kind":"article","role":"article","url":"/documentation/swift_packages/building_swift_packages_or_apps_that_use_them_in_continuous_integration_workflows","abstract":[{"type":"text","text":"Build Swift packages with an existing continuous integration setup and prepare apps that consume package dependencies within an existing CI pipeline."}]}}}